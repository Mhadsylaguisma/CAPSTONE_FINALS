import pandas as pd
import numpy as np
import scipy.stats as stats
import statsmodels.api as sm
import seaborn as sns
import matplotlib.pyplot as plt


    'Year': list(range(2011, 2025)),
    'Att': [502, 552, 317, 520, 624, 432, 505, 597, 378, 526, 531, 587, 499, 474],
    'Cmp': [343, 371, 203, 341, 402, 291, 341, 372, 281, 372, 366, 382, 319, 316],
    'Pct': [68.3, 67.2, 64, 65.6, 67.4, 67.4, 67.5, 62.3, 74.3, 70.7, 68.9, 65.1, 63.9, 66.7],
    'Yds': [4643, 4295, 2891, 4381, 4770, 3554, 4042, 4442, 2979, 4299, 4115, 4438, 4108, 4172],
    'Int': [6, 8, 2, 5, 7, 2, 5, 2, 4, 5, 4, 7, 5, 4],
    'TD': [45, 39, 27, 38, 36, 28, 26, 25, 27, 48, 37, 29, 23, 41],
    'Rating': [122.5, 108.0, 119.2, 112.2, 102.2, 112.2, 104.7, 97.6, 116.3, 121.5, 111.9, 99.3, 100.8, 119.6]
}
df = pd.DataFrame(data)


df.dropna(inplace=True)
print("âœ… Data cleaned. Number of rows:", len(df))


print("\nNumPy Operations:")
print("Mean TD:", np.mean(df['TD']))
print("Std Dev of Rating:", np.std(df['Rating']))
print("Max Yards:", np.max(df['Yds']))
print("Min INT:", np.min(df['Int']))
print("Sum of Completions:", np.sum(df['Cmp']))


corr, pval = stats.pearsonr(df['TD'], df['Rating'])
print(f"\nSciPy Correlation between TD and Rating: r = {corr:.2f}, p = {pval:.4f}")


X = sm.add_constant(df['TD'])
model = sm.OLS(df['Rating'], X).fit()
print("\nStatsmodels OLS Summary:")
print(model.summary())


plt.figure(figsize=(8, 5))
sns.lineplot(x='Year', y='Yds', data=df, marker='o')
plt.title("Passing Yards by Year")
plt.xlabel("Year")
plt.ylabel("Yards")
plt.grid(True)
plt.tight_layout()
plt.show()


plt.figure(figsize=(6, 5))
sns.boxplot(y='Pct', data=df)
plt.title("Completion Percentage Distribution")
plt.ylabel("Completion %")
plt.tight_layout()
plt.show()


plt.figure(figsize=(8, 5))
sns.regplot(x='TD', y='Rating', data=df, color='red')
plt.title("Touchdowns vs. QB Rating")
plt.xlabel("Touchdowns")
plt.ylabel("Rating")
plt.grid(True)
plt.tight_layout()
plt.show()
